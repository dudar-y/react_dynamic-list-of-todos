{"version":3,"sources":["types/Sort.ts","TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Sort","initialData","setSelectedTodo","setSortMode","setIsTodoModal","setModalId","sortMode","all","isTodoModal","modalId","selectedTodo","TodosContext","React","createContext","TodosProvider","children","useState","data","useMemo","Provider","value","TodoItem","todo","useContext","className","id","completed","title","type","onClick","userId","TodoList","list","map","TodoFilter","querry","onQuerry","onChange","e","target","active","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","isLoadingModal","setIsLoadingModal","user","setUser","userError","setUserError","useEffect","newUser","catch","href","email","name","App","todos","setTodos","isLoadins","setIsLoading","setQuerry","todosError","setTodosError","getWantedTodos","useCallback","toLowerCase","includes","trim","todosData","visibleTodos","filter","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64b461e1.chunk.js","sourcesContent":["export enum Sort {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { Sort } from './types/Sort';\nimport { Todo } from './types/Todo';\n\ntype State = {\n  setSelectedTodo: (todo: Todo | null) => void;\n  setSortMode: (value: Sort) => void;\n  setIsTodoModal: (value: boolean) => void;\n  setModalId: (value: number) => void;\n  sortMode: Sort;\n  isTodoModal: boolean;\n  modalId: number | null;\n  selectedTodo: Todo | null;\n};\n\nconst initialData: State = {\n  setSelectedTodo: () => {},\n  setSortMode: () => {},\n  setIsTodoModal: () => {},\n  setModalId: () => {},\n  sortMode: Sort.all,\n  isTodoModal: false,\n  modalId: null,\n  selectedTodo: null,\n};\n\nexport const TodosContext = React.createContext(initialData);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [sortMode, setSortMode] = useState(Sort.all);\n  const [isTodoModal, setIsTodoModal] = useState(false);\n  const [modalId, setModalId] = useState<number | null>(null);\n\n  const data = useMemo(() => ({\n    setSortMode,\n    setIsTodoModal,\n    setModalId,\n    setSelectedTodo,\n    sortMode,\n    isTodoModal,\n    modalId,\n    selectedTodo,\n  }), [sortMode, modalId, selectedTodo, isTodoModal]);\n\n  return (\n    <TodosContext.Provider value={data}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    setIsTodoModal,\n    setModalId,\n    setSelectedTodo,\n    selectedTodo,\n  } = useContext(TodosContext);\n\n  const handleButtonClick = () => {\n    setIsTodoModal(true);\n    setSelectedTodo(todo);\n    setModalId(todo.userId);\n  };\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={\n            todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger'\n          }\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleButtonClick}\n        >\n          <span className=\"icon\">\n            <i className={\n              selectedTodo\n                ? 'far fa-eye-slash'\n                : 'far fa-eye'\n            }\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  list: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ list }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {list.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n    </tbody>\n  </table>\n);\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Sort } from '../../types/Sort';\n\ntype Props = {\n  querry: string;\n  onQuerry: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ querry, onQuerry }) => {\n  const { setSortMode } = useContext(TodosContext);\n  const handleClearButtonClick = () => {\n    onQuerry('');\n  };\n\n  const handleQuerryChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    onQuerry(e.target.value);\n  };\n\n  const handleSortModeChange = (\n    e: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSortMode(e.target.value as Sort);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSortModeChange}\n          >\n            <option value={Sort.all}>All</option>\n            <option value={Sort.active}>Active</option>\n            <option value={Sort.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={querry}\n          onChange={handleQuerryChange}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {querry && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"clearSearchButton\"\n              onClick={handleClearButtonClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { TodosContext } from '../../TodosContext';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nconst ERROR_MESSAGE_USER = 'Failed to load user data';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    modalId,\n    selectedTodo,\n    setIsTodoModal,\n    setSelectedTodo,\n  } = useContext(TodosContext);\n  const [isLoadingModal, setIsLoadingModal] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [userError, setUserError] = useState('');\n\n  useEffect(() => {\n    getUser(modalId as number)\n      .then(newUser => {\n        setUser(newUser);\n        setIsLoadingModal(false);\n      })\n      .catch(() => {\n        setUserError(ERROR_MESSAGE_USER);\n        setIsLoadingModal(false);\n      });\n  }, []);\n\n  const handleButtonClick = () => {\n    setIsTodoModal(false);\n    setUser(null);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close info\"\n              onClick={handleButtonClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              {\n                userError\n                  ? (<p className=\"error\">{userError}</p>)\n                  : (\n                    <a href={`mailto:${user?.email}`}>\n                      {user?.name}\n                    </a>\n                  )\n              }\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useState,\n  useContext,\n  useCallback,\n} from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodosContext } from './TodosContext';\nimport { Todo } from './types/Todo';\nimport { Sort } from './types/Sort';\n\nconst ERROR_MESSAGE_TODOS = 'Failed to load todos, please try again later';\n\nexport const App: React.FC = () => {\n  const {\n    sortMode,\n    isTodoModal,\n  } = useContext(TodosContext);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadins, setIsLoading] = useState(true);\n  const [querry, setQuerry] = useState('');\n  const [todosError, setTodosError] = useState('');\n\n  const getWantedTodos = useCallback((todo: Todo) => {\n    return todo.title.toLowerCase().includes(querry.trim().toLowerCase());\n  }, [querry]);\n\n  function getVisibleTodos(type: Sort) {\n    switch (type) {\n      case Sort.all:\n        return todos\n          .filter(getWantedTodos);\n\n      case Sort.active:\n        return todos\n          .filter(todo => !todo.completed)\n          .filter(getWantedTodos);\n\n      case Sort.completed:\n        return todos\n          .filter(todo => todo.completed)\n          .filter(getWantedTodos);\n\n      default:\n        return todos;\n    }\n  }\n\n  useEffect(() => {\n    getTodos()\n      .then(todosData => {\n        setTodos(todosData);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setTodosError(ERROR_MESSAGE_TODOS);\n      });\n  }, []);\n\n  const visibleTodos = getVisibleTodos(sortMode);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter querry={querry} onQuerry={setQuerry} />\n            </div>\n\n            <div className=\"block\">\n              {isLoadins && !todosError && <Loader />}\n\n              {!isLoadins && !todosError && (\n                <TodoList list={visibleTodos} />\n              )}\n\n              {todosError && (\n                <p className=\"error\">{todosError}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isTodoModal && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}